/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type { XTokens, XTokensInterface } from '../XTokens';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'currency_address',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'parents',
            type: 'uint8',
          },
          {
            internalType: 'bytes[]',
            name: 'interior',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct IxTokens.Multilocation',
        name: 'destination',
        type: 'tuple',
      },
      {
        internalType: 'uint64',
        name: 'weight',
        type: 'uint64',
      },
    ],
    name: 'transfer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'parents',
            type: 'uint8',
          },
          {
            internalType: 'bytes[]',
            name: 'interior',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct IxTokens.Multilocation',
        name: 'asset',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'parents',
            type: 'uint8',
          },
          {
            internalType: 'bytes[]',
            name: 'interior',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct IxTokens.Multilocation',
        name: 'destination',
        type: 'tuple',
      },
      {
        internalType: 'uint64',
        name: 'weight',
        type: 'uint64',
      },
    ],
    name: 'transfer_multiasset',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class XTokens__factory {
  static readonly abi = _abi;
  static createInterface(): XTokensInterface {
    return new utils.Interface(_abi) as XTokensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): XTokens {
    return new Contract(address, _abi, signerOrProvider) as XTokens;
  }
}
